stages:
  - build

variables: &variables
  DEBIAN_FRONTEND: noninteractive
  DOCKER_HOST: tcp://docker:2375
  # Build parameters. We later override them at job level if needed.
  SONAR_SCANNER: "OFF"
  COVERALLS: "OFF"
  RUN_TESTS: "ON"
  STOCK_CPPZMQ: "ON"
  USE_PCH: "ON"
  CMAKE_BUILD_TYPE: "Debug"
  TANGO_USE_USING_NAMESPACE: "ON"
  BUILD_SHARED_LIBS: "ON"

test-windows:
  variables:
    <<: *variables
    RUN_TESTS: "OFF"
  tags:
  - shared-windows
  - windows
  - windows-1809
  stage: build
  before_script:
     - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
     - choco install -y miniconda3 --params="'/AddToPath:1'"
     - choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System' --version=3.20.1
     - RefreshEnv
     - conda config --add channels conda-forge
     - conda init powershell
     - "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
     - conda install -y -vvv omniorb cppzmq zeromq tango-idl
    # # See https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/issues/14
    # - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    # - RefreshEnv
  script:
    - md build
    - cd build
C:\tools\miniconda3\Library\
    - >
      cmake 
      -DCMAKE_VERBOSE_MAKEFILE=ON 
      -DCPPZMQ_BASE="C:\tools\miniconda3\Library\" 
      -DIDL_BASE="C:\tools\miniconda3\Library\" 
      -DOMNI_BASE="C:\tools\miniconda3\Library\" 
      -DZMQ_BASE="C:\tools\miniconda3\Library\" 
      ..
