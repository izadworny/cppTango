version: 0.0.{build}
branches:
  only:
    - main
    - 9.3-backports

configuration:
  - Debug
  - Release

environment:
  # Common variables
  IDL_BASE: C:\projects\tangoidl
  IDL_SOURCE: C:\projects\tangoidl-source

  # Iteration order:
  # - VS Image (2017 or 2015)
  # - Architecture (x86 aka win32 or x64)

  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: x64
      ARCH: x64-msvc15
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      PYTHONPATH: c:\Python37-x64\
      PYVER: "py37"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: win32
      ARCH: win32-msvc15
      CMAKE_GENERATOR: "Visual Studio 15 2017"
      PYTHONPATH: c:\Python37\
      PYVER: "py37"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x64
      ARCH: x64-msvc14
      CMAKE_GENERATOR: "Visual Studio 14 2015 Win64"
      PYTHONPATH: c:\Python36-x64\
      PYVER: "py36"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: win32
      ARCH: win32-msvc14
      CMAKE_GENERATOR: "Visual Studio 14 2015"
      PYTHONPATH: c:\Python36\
      PYVER: "py36"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x64
      ARCH: x64-msvc12
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 12 2013 Win64"
      PYTHONPATH: c:\Python33-x64\
      PYVER: "py33"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: win32
      ARCH: win32-msvc12
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 12 2013"
      PYTHONPATH: c:\Python33\
      PYVER: "py33"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x64
      ARCH: x64-msvc10
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 10 2010 Win64"
      PYTHONPATH: c:\Python33-x64\
      PYVER: "py33"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: win32
      ARCH: win32-msvc10
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 10 2010"
      PYTHONPATH: c:\Python33\
      PYVER: "py33"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: x64
      ARCH: x64-msvc9
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 9 2008 Win64"
      PYTHONPATH: c:\Python27-x64\
      PYVER: "py27"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      platform: win32
      ARCH: win32-msvc9
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 9 2008"
      PYTHONPATH: c:\Python27\
      PYVER: "py27"
      
init:
  # go to hell Xamarin (see http://help.appveyor.com/discussions/problems/4569)
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%" NEQ "Visual Studio 2017" del "C:\Program Files (x86)\MSBuild\4.0\Microsoft.Common.Targets\ImportAfter\Xamarin.Common.targets"
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%" NEQ "Visual Studio 2017" del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%" NEQ "Visual Studio 2017" del "C:\Program Files (x86)\MSBuild\12.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  #RDP from start
  #- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  # Tango IDL
  - cmd: git clone --depth 1 --quiet https://gitlab.com/tango-controls/tango-idl %IDL_SOURCE%
  - cmd: cd "C:\projects\"
  # Zmq
  - cmd: cd "C:\projects\"
  - cmd: md zeromq
  - cmd: cd "C:\projects\"
  - appveyor DownloadFile https://github.com/tango-controls/zmq-windows-ci/releases/download/4.0.5/zmq-4.0.5_%ARCH%.zip
  - cmd: 7z -y x zmq-4.0.5_%ARCH%.zip -oC:\projects\zeromq\
  #- cmd: move C:\projects\zeromq\lib\Release\libzmq*mt-4*.lib C:\projects\zeromq\lib\Release\libzmq.lib
  # OmniOrb
  - cmd: cd "C:\projects\"
  - cmd: md omniorb
  - cmd: cd "C:\projects\"
  - appveyor DownloadFile https://github.com/tango-controls/omniorb-windows-ci/releases/download/4.2.1-2/omniorb-4.2.1_%ARCH%_%PYVER%.zip
  - cmd: 7z -y x omniorb-4.2.1_%ARCH%_%PYVER%.zip -oC:\projects\omniorb\
  #Pthread-Win32
  - cmd: cd "C:\projects\"
  - cmd: md pthreads-win32
  - cmd: cd "C:\projects\"
  - appveyor DownloadFile https://github.com/tango-controls/Pthread_WIN32/releases/download/2.9.1/pthreads-win32-2.9.1_%ARCH%.zip
  - cmd: 7z -y x pthreads-win32-2.9.1_%ARCH%.zip -oC:\projects\pthreads-win32\
  #VS2008 patch
  - cmd: cd "C:\projects\"
  - cmd: appveyor DownloadFile https://github.com/menpo/condaci/raw/master/vs2008_patch.zip
  - cmd: 7z -y x vs2008_patch.zip -oC:\projects\vs2008_patch\
  - cmd: if %ARCH%==x64-msvc9 call C:\projects\vs2008_patch\setup_x64.bat
  - cmd: if %ARCH%==x32-msvc9 call C:\projects\vs2008_patch\setup_x86.bat
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%" NEQ "Visual Studio 2017" copy "C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\vcvars64.bat" "C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\amd64\vcvarsamd64.bat"
  
  - cmd: cd "C:\projects\cppTango"
install:
  #copy tree for debug build
  - cmd: cd c:/projects/
  # in case of wrong directory for cloning
  - cmd: rename %APPVEYOR_BUILD_FOLDER% cppTango
  - cmd: md static_build
  - cmd: md dynamic_build
  # Setting Visual Compiler
  - cmd: cd "C:\projects\"
  - cmd: if %ARCH%==win32-msvc9 call "C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\vcvarsall.bat"
  - cmd: if %ARCH%==win32-msvc9 set path=C:\Windows\Microsoft.NET\Framework\v4.0.30319;%path%
  - cmd: if %ARCH%==x64-msvc9 call "C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\vcvars64.bat"
  - cmd: if %ARCH%==win32-msvc10 call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"
  - cmd: if %ARCH%==win32-msvc10 set path=C:\Windows\Microsoft.NET\Framework\v4.0.30319;%path%
  - cmd: if %ARCH%==x64-msvc10 call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 
  - cmd: if %ARCH%==win32-msvc12 call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"
  - cmd: if %ARCH%==x64-msvc12 call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x64 
  - cmd: if %ARCH%==win32-msvc14 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
  - cmd: if %ARCH%==x64-msvc14 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64
  - cmd: if %ARCH%==win32-msvc15 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - cmd: if %ARCH%==x64-msvc15 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - cmd: echo "Generator='%CMAKE_GENERATOR%'"
  - cmd: echo "Platform='%Platform%'"
  - cmd: set PYTHONPATH=%PYTHONPATH%
  - cmd: set PATH=%PYTHONPATH%;%PATH%
  # Tango IDL
  - cmd: cd %IDL_SOURCE%
  - cmd: cmake -G "%CMAKE_GENERATOR%" -DCMAKE_INSTALL_PREFIX="%IDL_BASE%" .
  - cmd: cmake --build ./ --target install --config Debug
  - cmd: cmake --build ./ --target install --config Release
  # Tango API
  - cmd: cd "C:\projects\cppTango"
  - cmd: set ZMQ_BASE=C:/projects/zeromq/
  - cmd: set CPPZMQ_BASE=C:/projects/zeromq/
  - cmd: set OMNI_BASE=C:/projects/omniorb/
  - cmd: set PTHREAD_WIN=C:/projects/pthreads-win32/
  # Static builds
  - cmd: cd c:/projects/static_build
  - cmd: cmake -G "%CMAKE_GENERATOR%" -DTANGO_BUILD_SHARED=OFF -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DCMAKE_CXX_FLAGS_RELEASE="/MT" -DCMAKE_CXX_FLAGS_DEBUG="/MTd" -DIDL_BASE="%IDL_BASE%" -DOMNI_BASE="%OMNI_BASE%" -DZMQ_BASE="%ZMQ_BASE%" -DCPPZMQ_BASE="%CPPZMQ_BASE%" -DPTHREAD_WIN=%PTHREAD_WIN% -DBUILD_TESTING=OFF ../cppTango
  # Dynamic builds
  - cmd: cd c:/projects/dynamic_build
  - cmd: cmake -G "%CMAKE_GENERATOR%" -DTANGO_BUILD_SHARED=ON -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DIDL_BASE="%IDL_BASE%" -DOMNI_BASE="%OMNI_BASE%" -DZMQ_BASE="%ZMQ_BASE%" -DCPPZMQ_BASE="%CPPZMQ_BASE%" -DPTHREAD_WIN=%PTHREAD_WIN% -DBUILD_TESTING=OFF ../cppTango

clone_folder: C:\projects\cppTango

build:
  project: C:\projects\cppTango\tango.sln
  verbosity: minimal

build_script:
  - cmd: cd C:/projects/static_build
  - cmake --build ./ --config %CONFIGURATION%
  - cmd: cd C:/projects/dynamic_build
  - cmake --build ./ --config %CONFIGURATION%

after_build:
  - cmd: set /p TANGO_LIB_VER=<VERSION
  - cmd: echo %TANGO_LIB_VER%
  # Generate and move artifacts for all variants
  # static
  - cmd: cd C:/projects/static_build
  - cmd: cpack -C %CONFIGURATION% -G WIX
  - cmd: cpack -C %CONFIGURATION% -G ZIP
  - cmd: move libtango_%TANGO_LIB_VER%*.msi C:/projects/cppTango
  - cmd: move libtango_%TANGO_LIB_VER%*.zip C:/projects/cppTango
  # dynamic
  - cmd: cd c:/projects/dynamic_build
  - cmd: cpack -C %CONFIGURATION% -G WIX
  - cmd: cpack -C %CONFIGURATION% -G ZIP
  - cmd: move libtango_%TANGO_LIB_VER%*.msi C:/projects/cppTango
  - cmd: move libtango_%TANGO_LIB_VER%*.zip C:/projects/cppTango


on_finish:
  #RDP for finish
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

on_failure:
  #RDP for failure
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

artifacts:
  - path: ./*.zip
  - path: ./*.msi
